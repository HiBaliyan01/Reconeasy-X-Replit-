"name": "ClaimsTracker.tsx",
"type": "code/react",
"content": "import React, { useState, useEffect } from 'react';\nimport { Badge } from './Badge';\nimport { useNavigate } from 'react-router-dom';\n\nconst statusColor = (status: string, age: number) => {\n if (status === 'Resolved') return 'bg-green-100 text-green-800';\n if (age > 15) return 'bg-red-100 text-red-800';\n if (age > 7) return 'bg-orange-100 text-orange-800';\n return 'bg-gray-100 text-gray-800';\n};\n\nconst mockData = [\n {\n claimId: 'CLM12345',\n orderId: 'ORD001',\n marketplace: 'Amazon',\n issue: 'Short Refund',\n status: 'Pending',\n age: 11,\n value: '-‚Çπ500',\n createdAt: '2025-07-16',\n },\n {\n claimId: 'CLM12346',\n orderId: 'ORD002',\n marketplace: 'Myntra',\n issue: 'No Settlement',\n status: 'Resolved',\n age: 3,\n value: '-‚Çπ800',\n createdAt: '2025-07-25',\n },\n];\n\nconst ClaimsTracker: React.FC = () => {\n const navigate = useNavigate();\n const [selectedClaims, setSelectedClaims] = useState<string[]>([]);\n const [search, setSearch] = useState('');\n const [marketplaceFilter, setMarketplaceFilter] = useState('');\n const [statusFilter, setStatusFilter] = useState('');\n\n const toggleClaim = (id: string) => {\n setSelectedClaims((prev) =>\n prev.includes(id) ? prev.filter((c) => c !== id) : [...prev, id]\n );\n };\n\n const filteredData = mockData.filter(\n (item) =>\n (!marketplaceFilter || item.marketplace === marketplaceFilter) &&\n (!statusFilter || item.status === statusFilter) &&\n (item.orderId.toLowerCase().includes(search.toLowerCase()) ||\n item.issue.toLowerCase().includes(search.toLowerCase()))\n );\n\n return (\n <div className="p-4">\n <div className="flex flex-wrap gap-2 mb-4 items-center">\n <input\n placeholder="üîç Search by Order ID or Issue"\n className="border p-2 rounded w-64"\n value={search}\n onChange={(e) => setSearch(e.target.value)}\n />\n <select\n className="border p-2 rounded"\n onChange={(e) => setMarketplaceFilter(e.target.value)}\n >\n <option value="">All Marketplaces</option>\n <option value="Amazon">Amazon</option>\n <option value="Myntra">Myntra</option>\n <option value="Flipkart">Flipkart</option>\n </select>\n <select\n className="border p-2 rounded"\n onChange={(e) => setStatusFilter(e.target.value)}\n >\n <option value="">All Status</option>\n <option value="Pending">Pending</option>\n <option value="Resolved">Resolved</option>\n </select>\n </div>\n <table className="w-full border rounded-md text-sm">\n <thead>\n <tr className="bg-[var(--secondary)]">\n <th className="p-2"><input type="checkbox" /></th>\n <th className="p-2">Order ID</th>\n <th className="p-2">Issue</th>\n <th className="p-2">Marketplace</th>\n <th className="p-2">Age</th>\n <th className="p-2">Value</th>\n <th className="p-2">Status <span title="This is your internal claim status">‚ùì</span></th>\n </tr>\n </thead>\n <tbody>\n {filteredData.map((claim) => (\n <tr\n key={claim.claimId}\n className={hover:bg-[var(--secondary)] cursor-pointer ${selectedClaims.includes(claim.claimId) ? 'bg-[var(--secondary)]/70' : ''}}\n onClick={() => navigate(/claims/${claim.orderId})}\n >\n <td className="p-2" onClick={(e) => { e.stopPropagation(); toggleClaim(claim.claimId); }}>\n <input type="checkbox" checked={selectedClaims.includes(claim.claimId)} readOnly />\n </td>\n <td className="p-2 font-medium text-[var(--primary)]">{claim.orderId}</td>\n <td className="p-2">{claim.issue}</td>\n <td className="p-2">{claim.marketplace}</td>\n <td className="p-2">\n <span className={statusColor(claim.status, claim.age)}>{claim.age} days</span>\n </td>\n <td className="p-2 text-[var(--negative)]">{claim.value}</td>\n <td className="p-2">\n <Badge label={claim.status} variant="neutral" />\n </td>\n </tr>\n ))}\n </tbody>\n </table>\n </div>\n );\n};\n\nexport default ClaimsTracker;"
}